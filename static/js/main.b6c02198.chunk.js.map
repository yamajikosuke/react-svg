{"version":3,"sources":["components/top.tsx","components/Rect.tsx","components/Circle.tsx","components/common/CircleButton.tsx","components/page1.tsx","components/ClickRect.tsx","components/page2.tsx","components/common/ResourceContext2.tsx","components/common/CircleButton2.tsx","components/svg/PictureSvg.tsx","components/ClickRectUseContext.tsx","components/page2_1.tsx","components/page3.tsx","App.tsx","index.tsx"],"names":["Top","to","Rect","width","height","className","x","y","fill","rx","ry","stroke","strokeWidth","Circle","cx","cy","r","CircleButton","props","color","P1","ClickRect","useState","isComplete","setIsComplete","elementColor","p1","p2","p3","React","useEffect","parts","document","getElementsByClassName","Array","from","forEach","element","id","getAttribute","querySelector","addEventListener","elm","Object","keys","setAttribute","console","log","checkIsComplete","length","filter","P2","ResourceContext2","createContext","CircleButton2","useContext","setConfig","param","onClick","PictureSvg","ClickRectUseContext","config","P2_1","Provider","value","P3","canvasRef","useRef","ctx","current","getContext","fillStyle","strokeStyle","beginPath","arc","Math","PI","i","maxRadius","ref","App","exact","path","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6c02198.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Top: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <div>Top page</div>\n      <div>\n        <Link to={\"/p1\"}>page1</Link>\n      </div>\n      <div>\n        <Link to={\"/p2\"}>page2</Link>\n      </div>\n      <div>\n        <Link to={\"/p2-1\"}>page2-1</Link>\n      </div>\n      <div>\n        <Link to={\"/p3\"}>page3</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Top;\n","import React from \"react\";\n\nexport const Rect: React.FC = (): JSX.Element => {\n  return (\n    <main>\n      <svg width=\"200\" height=\"200\" className=\"svgcode\">\n          <rect x=\"50\" y=\"50\" width=\"100\" height=\"70\" fill=\"red\"></rect>\n      </svg>\n      <svg width=\"200\" height=\"200\" className=\"svgcode\">\n        <rect\n          x=\"30\"\n          y=\"50\"\n          width=\"100\"\n          height=\"70\"\n          rx=\"10\"\n          ry=\"10\"\n          fill=\"blue\"\n          stroke=\"black\"\n          strokeWidth=\"5\"\n        ></rect>\n      </svg>\n    </main>\n  );\n};\n","import React from \"react\";\n\nexport const Circle: React.FC = (): JSX.Element => {\n  return (\n    <main>\n      <svg width=\"200\" height=\"200\" className=\"svgcode\">\n        <circle cx=\"100\" cy=\"100\" r=\"50\" fill=\"red\"></circle>\n      </svg>\n      <svg width=\"200\" height=\"200\" className=\"svgcode\">\n        <circle\n          cx=\"100\"\n          cy=\"100\"\n          r=\"60\"\n          stroke=\"black\"\n          strokeWidth=\"5\"\n          fill=\"blue\"\n        ></circle>\n      </svg>\n    </main>\n  );\n};\n","import React from \"react\";\n\ntype buttonProps = {\n  color: string;\n};\nexport const CircleButton: React.FC<buttonProps> = (props): JSX.Element => {\n  return (\n    <svg width=\"40\" height=\"40\">\n      <circle cx=\"20\" cy=\"20\" r=\"20\" fill={props.color}></circle>\n    </svg>\n  );\n};\n","import React from \"react\";\n\nimport { Rect } from \"./Rect\";\nimport { Circle } from \"./Circle\";\nimport { CircleButton } from \"./common/CircleButton\";\n\nexport const P1: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <div>rect</div>\n      <Rect />\n      <div>circle</div>\n      <Circle />\n      <div>circle Button(propsで色指定）</div>\n      <CircleButton color=\"green\" />\n    </>\n  );\n};\n\nexport default P1;\n","import React, { useState } from \"react\";\n\ninterface elementColorProp {\n  [key: string]: { color: string; isComplete: boolean };\n}\n\nexport const ClickRect: React.FC = (): JSX.Element => {\n  // const [pickColor, setPickColor] = useState<string>(\"red\");\n  const [isComplete, setIsComplete] = useState<boolean>(false);\n\n  let elementColor: elementColorProp[] = [\n    { p1: { color: \"orange\", isComplete: false } },\n    { p2: { color: \"gray\", isComplete: false } },\n    { p3: { color: \"red\", isComplete: false } },\n  ];\n\n  React.useEffect(() => {\n    const parts = document.getElementsByClassName(\"parts\");\n    const elements = Array.from(parts); // collection を arrayに変換\n    elements.forEach((element: Element) => {\n      let id = element.getAttribute(\"id\");\n      document.querySelector(`#${id}`)?.addEventListener(\"click\", () => {\n        elementColor.forEach((elm) => {\n          if (id && id === Object.keys(elm)[0]) {\n            //  if (pickColor === elm[id][\"color\"]) {\n            element.setAttribute(\"fill\", elm[id][\"color\"]);\n            elm[id][\"isComplete\"] = true;\n            //    }\n          }\n        });\n        console.log(checkIsComplete());\n        if (checkIsComplete() === elementColor.length) setIsComplete(true);\n      });\n    });\n    console.log(isComplete);\n  });\n\n  const checkIsComplete = () => {\n    return elementColor.filter((element) => {\n      return element[Object.keys(element)[0]].isComplete === true;\n    }).length;\n  };\n\n  return (\n    <main>\n      <svg width=\"300\" height=\"300\">\n        <g>\n          <rect\n            className=\"parts\"\n            id=\"p1\"\n            x=\"50\"\n            y=\"50\"\n            width=\"100\"\n            height=\"70\"\n            fill=\"red\"\n          ></rect>\n          <rect\n            id=\"p2\"\n            className=\"parts\"\n            x=\"100\"\n            y=\"70\"\n            width=\"100\"\n            height=\"150\"\n            fill=\"black\"\n          ></rect>\n          <rect\n            id=\"p3\"\n            className=\"parts\"\n            x=\"70\"\n            y=\"130\"\n            width=\"100\"\n            height=\"150\"\n            fill=\"blue\"\n          ></rect>\n        </g>\n      </svg>\n    </main>\n  );\n};\n","import React from \"react\";\nimport { ClickRect } from \"./ClickRect\";\n\nexport const P2: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <div>onClick</div>\n      <ClickRect />\n    </>\n  );\n};\n\nexport default P2;\n","import React from \"react\";\n\nexport type resouceProps = { color: string };\nexport const ResourceContext2 = React.createContext<any>(null);\n","import React from \"react\";\nimport { ResourceContext2 } from \"./ResourceContext2\";\n\ntype buttonProps = {\n  color: string;\n};\nexport const CircleButton2: React.FC<buttonProps> = (props): JSX.Element => {\n  const [, setConfig] = React.useContext(ResourceContext2);\n  const param = 25;\n  return (\n    <svg width={param * 2} height={param * 2}>\n      <circle\n        cx={param}\n        cy={param}\n        r={param}\n        fill={props.color}\n        onClick={() => setConfig({ color: props.color })}\n      ></circle>\n    </svg>\n  );\n};\n","import React from \"react\";\n\nexport const PictureSvg: React.FC = (): JSX.Element => {\n  return (\n    <svg width=\"300\" height=\"300\">\n      <g>\n        <rect\n          className=\"parts\"\n          id=\"p1\"\n          x=\"50\"\n          y=\"50\"\n          width=\"100\"\n          height=\"70\"\n          fill=\"red\"\n        ></rect>\n        <rect\n          id=\"p2\"\n          className=\"parts\"\n          x=\"100\"\n          y=\"70\"\n          width=\"100\"\n          height=\"150\"\n          fill=\"black\"\n        ></rect>\n        <rect\n          id=\"p3\"\n          className=\"parts\"\n          x=\"70\"\n          y=\"130\"\n          width=\"100\"\n          height=\"150\"\n          fill=\"blue\"\n        ></rect>\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { CircleButton2 } from \"./common/CircleButton2\";\nimport { ResourceContext2 } from \"./common/ResourceContext2\";\nimport { PictureSvg } from \"./svg/PictureSvg\";\n\nexport const ClickRectUseContext: React.FC = (): JSX.Element => {\n  const [config] = React.useContext<any>(ResourceContext2);\n\n  React.useEffect(() => {\n    const parts = document.getElementsByClassName(\"parts\");\n    const elements = Array.from(parts); // collection を arrayに変換\n    elements.forEach((element: Element) => {\n      let id = element.getAttribute(\"id\");\n      document.querySelector(`#${id}`)?.addEventListener(\"click\", () => {\n        console.log(\"click\");\n        element.setAttribute(\"fill\", config.color);\n      });\n    });\n  });\n\n  return (\n    <main>\n      <PictureSvg />\n      <div>\n        <CircleButton2 color=\"pink\" />\n        <CircleButton2 color=\"red\" />\n        <CircleButton2 color=\"blue\" />\n        <CircleButton2 color=\"gray\" />\n      </div>\n      <div>color:{config.color}</div>\n    </main>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ClickRectUseContext } from \"./ClickRectUseContext\";\nimport { ResourceContext2 } from \"./common/ResourceContext2\";\n\nexport const P2_1: React.FC = (): JSX.Element => {\n  const resource = { color: \"\" };\n  const [config, setConfig] = useState(resource);\n\n  return (\n    <ResourceContext2.Provider value={[config, setConfig]}>\n      <div>onClick(useContext)</div>\n      <ClickRectUseContext />\n    </ResourceContext2.Provider>\n  );\n};\n","import React from \"react\";\n\nexport const P3: React.FC = (): JSX.Element => {\n  const canvasRef = React.useRef(null);\n  // set max radius\n  const maxRadius = 90;\n  // set canvas area\n  const canvasWidth = 300;\n  const canvasHeight = 300;\n\n  React.useEffect(() => {\n    const canvasObj: any = canvasRef.current;\n    const ctx = canvasObj.getContext(\"2d\");\n    ctx.fillStyle = \"rgb(255, 255, 255)\"; //\n    ctx.strokeStyle = \"rgb(180, 180, 180)\"; //\n    ctx.beginPath();\n\n    ctx.arc(125, 125, maxRadius, Math.PI * 2, false);\n    ctx.fill();\n\n    const dist = maxRadius / 5;\n    for (let i = 1; i < 6; i++) {\n      ctx.beginPath();\n      ctx.arc(125, 125, dist * i, Math.PI * 2, false);\n      ctx.stroke();\n    }\n  });\n\n  return (\n    <main>\n      <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} />\n    </main>\n  );\n};\n\nexport default P3;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Top } from \"./components/top\";\nimport { P1 } from \"./components/page1\";\nimport { P2 } from \"./components/page2\";\nimport { P2_1 } from \"./components/page2_1\";\nimport { P3 } from \"./components/page3\";\n\nexport const App: React.FC = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/react-svg\" render={(): JSX.Element => <Top />} />\n        <Route exact path=\"/\" render={(): JSX.Element => <Top />} />\n        <Route exact path=\"/p1\" render={(): JSX.Element => <P1 />} />\n        <Route exact path=\"/p2\" render={(): JSX.Element => <P2 />} />\n        <Route exact path=\"/p2-1\" render={(): JSX.Element => <P2_1 />} />\n        <Route exact path=\"/p3\" render={(): JSX.Element => <P3 />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}